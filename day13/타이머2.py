import time
# 파이썬 표준 모듈 time을 가져옵니다. 현재 시각, 대기(sleep) 같은 기능을 씁니다.
start_time = time.time()
# 시작 시간 기록
#“1초”라는 의미가 아니라 **1970년 1월 1일 0시 0분 0초(UTC)**부터 지금까지 흐른 시간(초 단위)을 돌려줍니다.
#이 숫자를 **“유닉스 타임스탬프(Unix timestamp)”**라고 해요
# 이 값을 타이머의 시작 시각으로 저장합니다.
print(time.time())
#1724567890.123456 지금의 시간을 초로 출력해본 것
#정수 부분: 지금까지 지난 초 (약 17억 초 = 50년 이상)
#지금 시점의 “절대 시간”을 초 단위로 기록해두는 것

end_time = start_time + 4 * 60
# 5분 = 5×60 = 300초.
#사실상 300이라는 값이 들어있는 게 아니고
#start에서 나온 1724567890 이 값에다가 300을 추가해주는 개념이다.
#시작 시각 값에다가 300초, 1200초를 더한 절대 시각

while True:
    now = time.time()
    # 루프 시작 시점의 현재 시각을 초 단위로 읽습니다.

    minutes = int((now - start_time) // 60)  # 지난 시간(분) 계산
    #(now - start_time) → 시작 이후 지나간 초.
    # now = time.time()
    # start_time = time.time()
    # 둘 다 똑같이 “현재 시각(초 단위)”을 가져오는 것처럼 보여서 “왜 빼지?” 하고 헷갈리실 수 있어요.
    # start_time : 프로그램을 시작한 순간의 시간(초)을 저장해둔 값 → 기준점
    # now : 반복문 안에서 “지금 이 순간의 시간(초)” → 현재 시각
    # 처음엔 프로그램 시작시간과 지금의 시간이 별 차이가 나지 않으므로
    # 첫 반복에서는 거의 차이가 없으니 0분 경과가 찍힙니다.
    # 시간이 흐를수록 now - start_time 차이가 점점 커지고, 그 차이가 “경과 시간”이 되는 거예요.

    #// 60 → 60으로 버림 나눗셈(분 단위의 정수부분만).
    #예) 119초가 흘렀다면 → 1분, 120초 → 2분
    print(f"{minutes}분 경과")  # 경과 시간 출력

    time.sleep(60)                 # 1분 쉬고 다음 반복
    # sleep : 프로그램 전체 실행을 일정 시간 동안 멈추게 하는 함수
    #슬립이 실행된 이후의 코드 실행 자체를 잠시 멈춤 상태로 둡니다.
    #time.sleep()은 인자로 “초(second)” 단위의 숫자를 받습니다

    if now >= end_time:           # 20분 이상이면 종료
        break
    #end_time : 5분(300초) 뒤의 시각을 넣어놓았음
    #now의 크기가 흐르다가 300초 뒤의 시간보다 커진다면
    # break로 반복을 종료한다.

print("5분이 지났습니다!")
# 5분이 지났습니다! 를 출력한다.
